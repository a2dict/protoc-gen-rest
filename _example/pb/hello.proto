syntax = "proto3";

package pb;


import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Say {
    rpc Hello (Request) returns (Response) {
        option (google.api.http) = {
			post: "/greeter/hello/{id}"
			body:"*"
		};
    }

    // Creates an upload session to start uploading photo data. The upload URL of
    // the returned `UploadRef` is used to upload the data for the photo.
    //
    // After the upload is complete, the `UploadRef` is used with
    // `StreetViewPublishService:CreatePhoto()` to create the `Photo` object
    // entry.
    rpc StartUpload (google.protobuf.Empty) returns (UploadRef) {
        option (google.api.http) = { post: "/v1/photo:startUpload" body: "*" };
    }

    // After the client finishes uploading the photo with the returned
    // `UploadRef`, `photo.create` publishes the uploaded photo to Street View on
    // Google Maps.
    //
    // This method returns the following error codes:
    //
    // * `INVALID_ARGUMENT` if the request is malformed.
    // * `NOT_FOUND` if the upload reference does not exist.
    rpc CreatePhoto (CreatePhotoRequest) returns (Photo) {
        option (google.api.http) = { post: "/v1/photo" body: "photo" };
    }
}

message Request {
    uint32 id = 1;
    string name = 2;
    int32 age = 3;
    uint32 page = 4;
    int64 limit = 5;
}

message Response {
    string msg = 1;
}

// Request to create a photo.
message CreatePhotoRequest {
    // Required. Photo to create.
    Photo photo = 1;
}

// Photo is used to store 360 photos along with photo metadata.
message Photo {
    // Output only. Identifier for the photo, which is unique among all photos in
    // Google.
    PhotoId photo_id = 1;

    // Required (when creating photo). Input only. The resource URL where the
    // photo bytes are uploaded to.
    UploadRef upload_reference = 2;

    // Output only. The download URL for the photo bytes. This field is set only
    // when the `view` parameter in a `GetPhotoRequest` is set to
    // `INCLUDE_DOWNLOAD_URL`.
    string download_url = 3;

    // Output only. The thumbnail URL for showing a preview of the given photo.
    string thumbnail_url = 9;

    // Output only. The share link for the photo.
    string share_link = 11;

    // Output only. View count of the photo.
    int64 view_count = 10;
}

// Identifier for a photo.
message PhotoId {
    // Required. A base64 encoded identifier.
    string id = 1;
}

// Upload reference for media files.
message UploadRef {
    // Required. An upload reference should be unique for each user. It follows
    // the form:
    // "https://streetviewpublish.googleapis.com/media/user/<account_id>/photo/<upload_reference>"
    string upload_url = 1;
}
